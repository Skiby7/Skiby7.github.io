<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://skiby7.github.io/</id><title>Linux Journey</title><subtitle>A handbook for sysadmins and linux users</subtitle> <updated>2023-04-16T00:14:37+02:00</updated> <author> <name>Leonardo Scoppitto</name> <uri>https://skiby7.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://skiby7.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://skiby7.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> Â© 2023 Leonardo Scoppitto </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>How to manage Wireguard peers access to LAN</title><link href="https://skiby7.github.io/posts/wireguard-pre-post-script/" rel="alternate" type="text/html" title="How to manage Wireguard peers access to LAN" /><published>2023-04-15T23:15:00+02:00</published> <updated>2023-04-15T23:15:00+02:00</updated> <id>https://skiby7.github.io/posts/wireguard-pre-post-script/</id> <content src="https://skiby7.github.io/posts/wireguard-pre-post-script/" /> <author> <name>Leonardo Scoppitto</name> </author> <category term="Networking" /> <summary> I spent an entire day trying to figure out how to restrict Wireguard clients access to the LAN network and hereâ€™s what I found. Credits to qdm12 and samboman who discussed this topic on this gist. When you enable or disable a new interface (wg-quick up/down wgX), runs the commands defined inside /etc/wireguard/wgX.conf: PreUp=Command executed before enabling the interface PostUp=Command ... </summary> </entry> <entry><title>How to resize qcow2 disks</title><link href="https://skiby7.github.io/posts/resize-qcow2-disks/" rel="alternate" type="text/html" title="How to resize qcow2 disks" /><published>2023-04-11T23:22:00+02:00</published> <updated>2023-04-11T23:27:41+02:00</updated> <id>https://skiby7.github.io/posts/resize-qcow2-disks/</id> <content src="https://skiby7.github.io/posts/resize-qcow2-disks/" /> <author> <name>Leonardo Scoppitto</name> </author> <category term="Sysadmin" /> <summary> Hereâ€™s a brief guide on how to resize qcow2 disks used by KVM virtual machines. First shutdown the VM: sudo virsh shutdown &amp;lt;machine-name&amp;gt; Backup the disk to resize and then expand it (in this case I increase the size by 10 GB): cp disk.qcow2 disk.qcow2.bup sudo qemu-img resize disk.qcow2 +10G sudo virsh start &amp;lt;machine-name&amp;gt; Now on the guest machine resize the partition: # Assumi... </summary> </entry> <entry><title>How to create VLANs in Ubuntu Server</title><link href="https://skiby7.github.io/posts/create-vlan-ubuntu-server/" rel="alternate" type="text/html" title="How to create VLANs in Ubuntu Server" /><published>2023-04-04T16:10:00+02:00</published> <updated>2023-04-04T16:10:00+02:00</updated> <id>https://skiby7.github.io/posts/create-vlan-ubuntu-server/</id> <content src="https://skiby7.github.io/posts/create-vlan-ubuntu-server/" /> <author> <name>Leonardo Scoppitto</name> </author> <category term="Networking" /> <summary> My self-hosted services are growing in number, so the network configuration has to keep up in terms of security and scalability. My server has a quad port NIC connected to a managed switch which supports 802.1Q VLANs, so in this post Iâ€™ll show you how to create VLANs in Ubuntu Server using netplan: Using a terminal, open the netplan configuration file located inside /etc/netplan # In my ... </summary> </entry> <entry><title>QEMU/KVM Machines Backup</title><link href="https://skiby7.github.io/posts/backup-your-server/" rel="alternate" type="text/html" title="QEMU/KVM Machines Backup" /><published>2022-06-08T12:20:00+02:00</published> <updated>2023-04-05T00:39:05+02:00</updated> <id>https://skiby7.github.io/posts/backup-your-server/</id> <content src="https://skiby7.github.io/posts/backup-your-server/" /> <author> <name>Leonardo Scoppitto</name> </author> <category term="Sysadmin" /> <summary> Prepare the machines Having a lot of self hosted services is a fun hobby, but it also takes a lot of time to setup and configure every VM, so itâ€™s crucial to have a backup of your environment to restore everything you achieved in case of a data loss. Hereâ€™s how to do it with Borg. First get a list of your virtual machines: sudo virsh list --all Shutdown every running machine, from virt-manager... </summary> </entry> <entry><title>Manage Drive Images</title><link href="https://skiby7.github.io/posts/manage-images/" rel="alternate" type="text/html" title="Manage Drive Images" /><published>2022-05-30T19:20:00+02:00</published> <updated>2022-05-30T19:34:00+02:00</updated> <id>https://skiby7.github.io/posts/manage-images/</id> <content src="https://skiby7.github.io/posts/manage-images/" /> <author> <name>Leonardo Scoppitto</name> </author> <category term="Sysadmin" /> <summary> When working on multiple projects or you have a nice setup, it is useful to backup the entire boot drive in a .img file either to restore a perfectly working environment (for example after a drive failure or a catastrophic update ðŸ™ƒ) or to switch between multiple projects using the same drive (however beware drive wearing if you use an SSD or an SD card). Hereâ€™s how to do it: Note: replace /... </summary> </entry> </feed>
